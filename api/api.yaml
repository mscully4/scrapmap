AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: ""

Parameters:
  pythonPath:
    Type: String
  pythonVersion:
    Type: String
  apiStageName:
    Type: String
  rootResourceId:
    Type: String
  restApiId:
    Type: String
  dynamoTableArn:
    Type: String
  dynamoTableName:
    Type: String

Resources:
  ### /api Resource ###
  APIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref restApiId
      ParentId: !Ref rootResourceId
      PathPart: api

  # Write Only role for Dynamo
  LambdaDynamoWriteOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: 
              Service: 
                - lambda.amazonaws.com
            Action:
                - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:PutItem"
                  - "dynamodb:BatchWrite"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:DescribeLogStreams"
                Resource: "*"

  # Read Only role for Dynamo
  LambdaDynamoReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: 
              Service: 
                - lambda.amazonaws.com
            Action:
                - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:BatchGetItem"
                  - "dynamodb:Scan"
                  - "dynamodb:Query"
                  - "dynamodb:ConditionCheckItem"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:DescribeLogStreams"
                Resource: "*"

  # /api Deployment
  APIDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref restApiId
      StageName: !Ref apiStageName